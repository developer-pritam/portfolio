// Astronomy.
var G = 6.67384e-11; // m3 kg-1 s-2
var SEC_PER_STEP = 8;
var STEPS_PER_FRAME = 2000;
var METERS_PER_UNIT = 1000000000;
var MAX_TRAIL_VERTICES = 4000;
var MIN_GHOST_DISTANCE = 100;
var GHOST_DISTANCE_SCALE = 80;
var MAX_GHOST_OPACITY = 0.15;

var sun; 
var planets=[];
var loadCube;

// porjects
var table = [
    "Every Other World", "toolkit:", "WebGL, Javascript, 3D Sounds, Web Audio, Three.js, Tone.js", 1, 1,
    "Jenga Phriend", "toolkit:", "WebGL, Mobile, Javascript, Node.js, WebSocket, Three.js", 2, 1,
    "Dance, Dance", "toolkit:", "Android, Mobile, Processing, Data Visualization, WebSocket, Node.js", 3, 1,
    "Invisible Cities", "toolkit:", "3D Printing, Python, Data Visualization, Natural Language Processing, Sentiment Analysis, Rhino", 4, 1,
    "Rubik's", "toolkit:", "Leap Motion, Hand Tracking, Processing", 1, 2,
    "Birdveillance", "toolkit:", "Surveillance Camera, Arduino, Processing, Twitter API", 2, 2,
    "Yiyang-Liang Portfolio", "toolkit:", "CSS3, WebGL, Web Design, Interaction Design, Javascript", 3, 2,
    "You Will Always Be In My Heart", "toolkit:", "Html5 WebRTC, Face Tracking, Mobile Native Client", 4, 2
];

var concepts = [
    "Every Other World is an experimental game about space and sound. Each visual element is free to explore and interact with. Players can also build their own world like Minecraft. The goal is to uncover a secret door that can lead you out of this space. Sound, is the only light that could guide you through another world. Put on your headphone, touch, jump or collide to hear the music, then follow the sound to look for its source. There, you will find your destination. ",
    "Jenga Phriend is a multiplayer game that lets you and your friends play Jenga together or even remotely. By opening a web page on mobile, your phone becomes your controller and the Jenga block right away. After selecting which block to move, hold your phone, move and tilt carefully to remove the block out of the Jenga tower. The result will be rendered at the same url in realtime. So everyone with the url could enjoy the game. The mechanics is: when you open the web page on your mobile phone, it will get the accelerometer and gyro data, then send and broadcast it through WebSocket. ",
    "Dance Dance is a live dance visualization project. It uses mobile phone as sensor to get data from dance movements. Nowadays, people won’t leave their phones even they are on the dancing floor.I want to create fun interaction through the objects that people are most familiar and comfortable with. I made an android app sending accelerometer data of the phone to server through WebSocket. In the client side, visual sketches written by Processing receive and respond to the movement data in real-time.",
    "Invisible Cities is a 3D printing sculpture generated by text analysis of Italo Calvino’s “Invisible Cities”. Architects build city models based on design and research. Urban planners build models based on science and social studies. And programmers build cities based on literature and computer. Collaborating with Alejandro Puentos, we use Natural Language Toolkit and Google Sentiment Analysis API to analyze the book. The result is rendered in Rhino using Rhino-Python.",
    "Rubik’s is an expclerimental project that explores and challenges people’s adaptivity to solve intellectual problems in 3D interface. Through Leap Motion, players use their hand gestures to solve the puzzle in a 3D environment. The cube is programmed by Rubik’s algorithm in Processing. It can also remember each movement and track back to the default mode.",
    "Birdveillance (@birdveillance) is a surveillance bird. This friendly creature looks like a bird, sings bird songs, and behaves like a bird, incorporating Perlin Noise into its darting blackbird-inspired motions. Taking the form of a golden oriole, Birdveillance awakens from its slumber to follow your face with a playful coquettishness as you walk by. You look up for a moment to determine the source of this indoor birdcall, and might even chat with the bird itself, before resuming your human activities in the hallway. But at that moment, a light flashes! The bird tweets! And the Twitter account @birdveillance Tweets a photograph of your face, accompanied by a speech-to-text snippet of your conversation. This project is a collaboration with Jason Sigal from ITP’s Introduction to Physical Computing and the 2013 Winter Show.",
    "I’m always interesting in innovating new user interaction and information visualization. Through programming and designing my own portfolio website, I have the chance to experiment CSS3 with Three.js to create fluid interactions and clear information hierarchy in 3D. ",
    "You Will Always Be In My Heart is a simple demo of head tracking with WebRTC in a mobile browser. A mobile little heart will face towards your smile whenever and wherever. I experiment with html5 in mobile web environment, making realtime video streaming from native mobile devices possible. Currently this project only works in latest chrome browser in Android phones."
]

var imagePath = [
    'img/0.png',
    'img/1.png',
    'img/2.png',
    'img/6.png',
    'img/4.png',
    'img/5.jpg',
    'img/3_1.png',
    'img/7.png'
]


var camera, scene, raycaster, renderer;
var scene2, renderer2;

var mouse = new THREE.Vector2();
var INTERSECTED;

var objects = [];
var targets = { table: [], sphere: [], helix: [], grid: [] };

var element;

var project = [];
var project_default = new THREE.Object3D();
var project_one = new THREE.Object3D();
var project_two = new THREE.Object3D();
var project_three = new THREE.Object3D();
var project_four = new THREE.Object3D();
var project_five = new THREE.Object3D();
var project_six = new THREE.Object3D();
var project_seven = new THREE.Object3D();
var project_eight = new THREE.Object3D();
var intro = new THREE.Object3D();
var end = new THREE.Object3D();

var about_intro;






function init() {

    camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 10000 );
    camera.position.z = 2600;
    // camera.position.set(0, 200, 450);

    scene = new THREE.Scene();
    scene2 = new THREE.Scene();
    


    $ = document.getElementById.bind(document);
    $("container").innerHTML = "";
    // table


    { // projects-start
        // ===================================== project targets ========================================
        // projects 目的地
        var intro_Ypos = 200;
        var intro_Zpos = -9000;
        intro.position.x =0;
        intro.position.y =intro_Ypos;
        intro.position.z =intro_Zpos;

        project_default.position.x = 0;
        project_default.position.y = 0
        project_default.position.z = 2600;
        project_one.position.x = -5000;
        project_one.position.y =0;
        project_one.position.z =3100;
        project.push(project_one);
        project_two.position.x = -5000;
        project_two.position.y = 3000;
        project_two.position.z = 3100;
        project.push(project_two);
        project_three.position.x = 0;
        project_three.position.y =3000;
        project_three.position.z =3100;
        project.push(project_three);
        project_four.position.x = 5000;
        project_four.position.y = 3000;
        project_four.position.z =3100;
        project.push(project_four);
        project_five.position.x = -5000;
        project_five.position.y = -3000;
        project_five.position.z =3100;
        project.push(project_five);
        project_six.position.x = 0;
        project_six.position.y = -3000;
        project_six.position.z = 3100;
        project.push(project_six);
        project_seven.position.x = 5000;
        project_seven.position.y = -3000;
        project_seven.position.z = 3100;
        project.push(project_seven);
        project_eight.position.x = 5000;
        project_eight.position.y = 0;
        project_eight.position.z = 3100;
        project.push(project_eight);


        // go back
        




        // intro
        var about = document.createElement('div');
        about.id = 'about';
        about.className = 'about';
        var about_info = document.createElement('div');
        about_info.id = 'about_info';
        about_info.className = 'about_info';
        about_info.textContent = "Yiyang-Liang is a creative technologist and current master candidate at Interactive Telecommunication Program (ITP) at NYU. She loves coding, creating cool things, and making them meaningful. Her email is lyy.yiyang@gmail.com. She'd like to share any thoughts and ideas with you.";

        var goback_i = document.createElement('div');
        goback_i.className = 'cross_about';
        goback_i.id = 'cross_about';
        goback_i.textContent = "X";
        goback_i.onclick = function(event) {
            moveToProject(project_default, 1000);
            about.removeChild(about_info);
            event.preventDefault();
        };
        about.appendChild(goback_i);
        about_intro = new THREE.CSS3DObject(about);
        about_intro.position.x = intro.position.x;
        about_intro.position.y = intro.position.y;
        about_intro.position.z = -10000;
        scene.add(about_intro);
        
       
        //1 << Every Other World >>
        var project1 = document.createElement('div');
        project1.className = 'project1';
        project1.id = 'project1';

        var goback = document.createElement('div');
        goback.className = 'cross';
        goback.id = 'cross';
        goback.textContent = "x";
        goback.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };
        project1.appendChild(goback);

        var image1 = document.createElement('img');
        image1.id = 'image1';
        image1.className = 'image1';  
        image1.src = 'img/projects/world_1.gif';

        var image1_2 = document.createElement('img');
        image1_2.id = 'image1_2';
        image1_2.className = 'image1_2';  
        image1_2.src = 'img/projects/world_2.gif';        

        var concept1 = document.createElement('div');
        concept1.className = 'concept';
        concept1.textContent = concepts[0];
        project1.appendChild(concept1); 
 
        var golink1 = document.createElement('div');
        golink1.className = 'golink';
        golink1.textContent = "URL: everyotherworld.com";
        golink1.onclick = function(event) {
            window.open("http://everyotherworld.com");
            event.preventDefault();
        }
        project1.appendChild(golink1);

        var tool1 = document.createElement('div');
        tool1.className = 'tool';
        tool1.textContent = 'toolkit: ' + table[2];
        project1.appendChild(tool1);

        var projectOne = new THREE.CSS3DObject(project1);
        projectOne.position.x = -5000;
        projectOne.position.y = 0;
        projectOne.position.z = 0;
        scene.add( projectOne );



        //2 << Jenga >>
        var project2 = document.createElement('div');
        project2.className = 'project2';
        project2.id = 'project2';

        var goback2 = document.createElement('cross');
        goback2.className = 'cross';
        goback2.id = 'cross';
        goback2.textContent = "x";
        goback2.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
            
        };
        project2.appendChild(goback2);

        var image2 = document.createElement('img');
        image2.id = 'image2';
        image2.className = "image2";
        image2.src = 'img/projects/jenga1.gif';

        var image2_2 = document.createElement('img');
        image2_2.id = 'image2_2';
        image2_2.className = "image2_2";
        image2_2.src = 'img/projects/jenga2.gif';

        var tool2 = document.createElement('div');
        tool2.id = 'tool2';
        tool2.className = 'tool';
        tool2.textContent = 'toolkit: ' + table[7];
        project2.appendChild(tool2);

        var concept2 = document.createElement('div');
        concept2.className = 'concept';
        concept2.textContent = concepts[1];
        project2.appendChild(concept2);

        var golink2 = document.createElement('div');
        golink2.className = 'golink';
        golink2.textContent = "under further developement, coming soon";
        // golink2.onclick = function(event) {
        //     window.open("http://everyotherworld.com");
        //     event.preventDefault();
        // }
        project2.appendChild(golink2);

        var projectTwo = new THREE.CSS3DObject(project2);
        projectTwo.position.x = -5000;
        projectTwo.position.y = 3000;
        projectTwo.position.z = 0;

        scene.add( projectTwo );

        //3 dance dance
        var project3 = document.createElement('div');
        project3.className = 'project3';
        project3.id = 'project3';

        var goback3 = document.createElement('cross');
        goback3.className = 'cross';
        goback3.id = 'cross';
        goback3.textContent = "x";
        goback3.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };
        project3.appendChild(goback3);

        var concept3 = document.createElement('div');
        concept3.className = 'concept';
        concept3.textContent = concepts[2];
        project3.appendChild(concept3);

        var video3 = document.createElement('iframe')
        video3.src = "http://player.vimeo.com/video/95708916"
        video3.width = '1595px';
        video3.height = '900px';

        var video3_1 = document.createElement('iframe')
        video3_1.className = 'video3_1';
        video3_1.src = "http://player.vimeo.com/video/95711064"
        video3_1.width = '1595px';
        video3_1.height = '900px';

        var tool3 = document.createElement('div');
        tool3.id = 'tool3';
        tool3.className = 'tool';
        tool3.textContent = 'toolkit: ' + table[12];
        project3.appendChild(tool3);

        var projectThree = new THREE.CSS3DObject(project3);
        projectThree.position.x = 0;
        projectThree.position.y = 3000;
        projectThree.position.z = 0;
        scene.add( projectThree );

        //4 invisible cities
        var project4 = document.createElement('div');
        project4.className = 'project4';
        project4.id = 'project4';

        var goback4 = document.createElement('cross');
        goback4.className = 'cross';
        goback4.id = 'cross';
        goback4.textContent = "x";
        goback4.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };
        project4.appendChild(goback4);

        var concept4 = document.createElement('div');
        concept4.className = 'concept4';
        concept4.textContent = concepts[3];
        project4.appendChild(concept4);

        var image4 = document.createElement('img');
        image4.id = 'image4';
        image4.className = 'image4';  
        image4.src = 'img/projects/image4.jpg';
        project4.appendChild(image4);  

        var image4_1 = document.createElement('img');
        image4_1.id = 'image4_1';
        image4_1.className = 'image4_1';  
        image4_1.src = 'img/projects/image4_1.jpg';
        project4.appendChild(image4_1);  

        var video4 = document.createElement('iframe')
        video4.className = 'video4';
        video4.src = "http://player.vimeo.com/video/93100405"
        video4.width = '1185px';
        video4.height = '900px';
        video4.frameborder = 0;
        
        var tool4 = document.createElement('div');
        tool4.id = 'tool4';
        tool4.className = 'tool';
        tool4.textContent = 'toolkit: ' + table[17];
        project4.appendChild(tool4);

        var golink4 = document.createElement('div');
        golink4.className = 'golink';
        golink4.textContent = "For further information, please continue on Alejandro's post.";
        golink4.onclick = function(event){
            window.open("http://aledro.co/archive/invisible-cities/");
            event.preventDefault();
        }
        project4.appendChild(golink4);

        var projectFour = new THREE.CSS3DObject(project4);
        projectFour.position.x = 5000;
        projectFour.position.y = 3000;
        projectFour.position.z = 0;
        scene.add( projectFour );


        //5
        var project5 = document.createElement('div');
        project5.className = 'project5';
        project5.id = 'project5';

        var goback5 = document.createElement('div');
        goback5.className = 'cross';
        goback5.id = 'cross';
        goback5.textContent = "x";
        goback5.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };
        project5.appendChild(goback5);

        var concept5 = document.createElement('div');
        concept5.className = 'concept';
        concept5.textContent = concepts[4];
        project5.appendChild(concept5);

        var video5 = document.createElement('iframe');
        video5.src = "http://player.vimeo.com/video/90512956";
        video5.width = '1600px';
        video5.height = '900px';
        

        var video5_1 = document.createElement('iframe');
        video5_1.className = 'video5_1';
        video5_1.src = "http://player.vimeo.com/video/90502907";
        video5_1.width = '1600px';
        video5_1.height = '900px';
        
        var tool5 = document.createElement('div');
        tool5.id = 'tool5';
        tool5.className = 'tool';
        tool5.textContent = 'toolkit: ' + table[22];
        project5.appendChild(tool5);

        var projectFive = new THREE.CSS3DObject(project5);
        projectFive.position.x = -5000;
        projectFive.position.y = -3000;
        projectFive.position.z = 0;
        scene.add( projectFive );


        //6
        var project6 = document.createElement('div');
        project6.className = 'project6';
        project6.id = 'project6';

        var goback6 = document.createElement('div');
        goback6.className = 'cross';
        goback6.id = 'cross';
        goback6.textContent = "x";
        goback6.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };

        var image6 = document.createElement('img');
        image6.id = 'image6';
        image6.className = 'image6';  
        image6.src = 'img/projects/img6.jpg';
        project6.appendChild(image6);  

        var image6_1 = document.createElement('img');
        image6_1.id = 'image6_1-1';
        image6_1.className = 'image6_1';  
        image6_1.src = 'img/projects/img6_1.png';
        project6.appendChild(image6_1);  
    
        var image6_3 = document.createElement('img');
        image6_3.id = 'image6_3';
        image6_3.className = 'image6_3';  
        image6_3.src = 'img/projects/img6_3.png';
        project6.appendChild(image6_3);
    
        var image6_4 = document.createElement('img');
        image6_4.id = 'image6_4';
        image6_4.className = 'image6_4';  
        image6_4.src = 'img/projects/img6_4.png';
        project6.appendChild(image6_4);

        project6.appendChild(goback6);

        var tool6 = document.createElement('div');
        tool6.id = 'tool6';
        tool6.className = 'tool';
        tool6.textContent = 'toolkit: ' + table[27];
        project6.appendChild(tool6);

        var concept6 = document.createElement('div');
        concept6.className = 'concept6';
        concept6.textContent = concepts[5];
        project6.appendChild(concept6); 

        var projectSix = new THREE.CSS3DObject(project6);
        projectSix.position.x = 0;
        projectSix.position.y = -3000;
        projectSix.position.z = 0;
        scene.add( projectSix );


        //7
        var project7 = document.createElement('div');
        project7.className = 'project7';
        project7.id = 'project7';

        var goback7 = document.createElement('div');
        goback7.className = 'cross';
        goback7.id = 'cross';
        goback7.textContent = "x";
        goback7.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };
        project7.appendChild(goback7);

        var image7_1 = document.createElement('img');
        image7_1.id = 'image7_1';
        image7_1.className = 'image7_1';  
        image7_1.src = 'img/projects/yiyang4.gif';

        var image7_2 = document.createElement('img');
        image7_2.id = 'image7_2';
        image7_2.className = 'image7_2';  
        image7_2.src = 'img/projects/yiyang1.gif';

        var image7_3 = document.createElement('img');
        image7_3.id = 'image7_3';
        image7_3.className = 'image7_3';  
        image7_3.src = 'img/projects/yiyang2.gif';

        var image7_4 = document.createElement('img');
        image7_4.id = 'image7_4';
        image7_4.className = 'image7_4';  
        image7_4.src = 'img/projects/yiyang3.gif';

        var tool7 = document.createElement('div');
        tool7.id = 'tool7';
        tool7.className = 'tool';
        tool7.textContent = 'toolkit: ' + table[32];
        project7.appendChild(tool7);

        var concept7 = document.createElement('div');
        concept7.className = 'concept7';
        concept7.textContent = concepts[6];
        project7.appendChild(concept7);

        var projectSeven = new THREE.CSS3DObject(project7);
        projectSeven.position.x = 5000;
        projectSeven.position.y = -3000;
        projectSeven.position.z = 0;
        scene.add( projectSeven );


        //8
        var project8 = document.createElement('div');
        project8.className = 'project8';
        project8.id = 'project8';

        var goback8 = document.createElement('div');
        goback8.className = 'cross';
        goback8.id = 'cross';
        goback8.textContent = "x";
        goback8.onclick = function(event) {
            moveToProject(project_default, 1000);
            event.preventDefault();
        };
        project8.appendChild(goback8);

        var concept8 = document.createElement('div');
        concept8.className = 'concept';
        concept8.textContent = concepts[7];
        project8.appendChild(concept8);

        var video8 = document.createElement('iframe')
        video8.src = "http://player.vimeo.com/video/94555974"
        video8.width = '1600px';
        video8.height = '888px';
        
        var tool8 = document.createElement('div');
        tool8.id = 'tool7';
        tool8.className = 'tool';
        tool8.textContent = 'toolkit: ' + table[37];
        project8.appendChild(tool8);

        var golink8 = document.createElement('div');
        golink8.className = 'golink';
        golink8.textContent = "URL:yiyang-liang.com/heart  (latest chrome in Android phones only)";
        golink8.onclick = function(event){
            window.open("http://yiyang-liang.com/heart");
            event.preventDefault();
        }
        project8.appendChild(golink8);

        var projectEight = new THREE.CSS3DObject(project8);
        projectEight.position.x = 5000;
        projectEight.position.y = 0;
        projectEight.position.z = 0;
        scene.add( projectEight );


        // setTimeout(function(){
            project3.appendChild(video3);
            project3.appendChild(video3_1);
            project4.appendChild(video4);
            project5.appendChild(video5);
            project5.appendChild(video5_1);
            project8.appendChild(video8);
            
        // }, 2390);

       

        // ************************************************************************************************
        for ( var i = 0; i < table.length; i += 5 ) {



            element = document.createElement( 'div' );
            element.className = 'element';
            element.id = 'element';
            // element.style.backgroundImage = 'url(' +imagePath[i/5] + ')';
            element.setAttribute("data-index", i/5);

            //images   
            var img = document.createElement('img') ;
            img.id = 'image';
            img.className = 'image';
            img.src = imagePath[i/5];
            element.appendChild( img );

            // toolkit
            var tools = document.createElement( 'div' );
            tools.className = 'tools';
            tools.textContent = table[ i + 2];
            element.appendChild( tools );


            // 大title
            var symbol = document.createElement( 'div' );
            symbol.className = 'symbol';
            symbol.textContent = table[ i ];
            element.appendChild( symbol );


            // 点击每个element to trigger modal window
            element.onclick = function () {
                var index = this.getAttribute('data-index');

                if (index == 0) {
                    project1.appendChild(image1);  
                    project1.appendChild(image1_2);
                    moveToProject( project_one, 1500);
                } else if (index ==1) {
                    project2.appendChild(image2);
                    project2.appendChild(image2_2);  
                    moveToProject(project_two, 1500);
                } else if (index ==2) {
                    moveToProject(project_three, 1500);
                } else if (index ==3) {
                    moveToProject(project_four, 1500);
                } else if(index == 4) {
                    moveToProject(project_five, 1500);
                } else if (index ==5) {
                    moveToProject(project_six, 1500);
                } else if (index ==6) {
                    moveToProject(project_seven, 1500);
                    project7.appendChild(image7_4);
                    project7.appendChild(image7_3);
                    project7.appendChild(image7_2);
                    project7.appendChild(image7_1);
                } else if (index ==7) {
                    moveToProject(project_eight, 1500);
                }
                // console.log(index);
                
            }



            var object = new THREE.CSS3DObject( element );
            object.position.x = Math.random() * 4000 ;
            object.position.y = Math.random() * 4000 ;
            object.position.z = Math.random() * 4000 + 2000 ;
            scene.add( object );


            objects.push( object );
            

            // table table : 720,720间距

            var object = new THREE.Object3D();
            object.position.x = ( table[ i + 3 ] * 720 ) - 1800;
            object.position.y = - ( table[ i + 4 ] * 720 ) + 1090;
            targets.table.push( object );	

            // i = 0, 5, 10, .... 35;
          
        }


        var button = document.getElementById( 'table' );
        button.addEventListener( 'click', function ( event ) {

            moveToProject(intro, 2000);
            // scene.add(about_intro);
            about.appendChild(about_info);
            // event.preventDefault();
        }, false );

    } // projects-end

    

    // solar system
    {
        var Ypos = 0;
        var Zpos = -10000;
        
        sun = addSphere(0.69, 0, Ypos, Zpos, { mass: 1.988435e30 });
        sun.astro.ghost.visible = false;
        

        planets.push(addSphere(0.0024397, 50.32, Ypos, Zpos,  { mass: 3.30104e23, vel: new THREE.Vector3(0, 0, 4.74e-5) }));
        planets.push(addSphere(0.0060519, 108.8, Ypos, Zpos,  { mass: 4.86732e24, vel: new THREE.Vector3(0, 0, 3.5e-5) }));
        planets.push(addSphere(0.0063674447, 150, Ypos, Zpos, { mass: 5.9721986e24, vel: new THREE.Vector3(0, 0, 2.963e-5) }));
        planets.push(addSphere(0.003386, 227.94, Ypos, Zpos,  { mass: 6.41693e23, vel: new THREE.Vector3(0, 0, 0.0000228175) }));
        planets.push(addSphere(0.069173, 578.33, Ypos, Zpos,   { mass: 1.89813e27, vel: new THREE.Vector3(0, 0, 0.0000129824) }));
        // planets.push(addSphere(0.057316, 1429.4, Ypos, Zpos,   { mass: 5.68319e26, vel: new THREE.Vector3(0, 0, 9.280e-6) }));
        // planets.push(addSphere(0.025266, 2870.99, Ypos, Zpos,  { mass: 8.68103e25, vel: new THREE.Vector3(0, 0, 6.509e-6) }));
        // planets.push(addSphere(0.024553, 4504, Ypos,Zpos,   { mass: 1.0241e26, vel: new THREE.Vector3(0, 0, 5.449e-6) }));
    } 


    loadCube = new THREE.Mesh(new THREE.BoxGeometry( 100, 100, 100 ), new THREE.MeshBasicMaterial( { wireframe: true, color:0x000000 } ));
    loadCube.position.z = 90;
    scene2.add(loadCube);
    
    end.position.z= -25000;
    end.position.x=0;
    end.position.y=0;

    window.onscroll = scroll;

    function scroll () {
     // alert("scroll event detected! " + window.pageXOffset + " " + window.pageYOffset);
    }



    setTimeout(function() { 
        transform( targets.table, 3000 );
        cubeFade(end, 2300);
    }, 5100);
    // transform( targets.table, 2300 );
 
    


    raycaster = new THREE.Raycaster();

    renderer = new THREE.CSS3DRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.domElement.style.position = 'absolute';
    document.getElementById( 'container' ).appendChild( renderer.domElement );

    
    renderer2 = new THREE.WebGLRenderer();
    renderer2.setClearColor( 0xf0f0f0 );
    renderer2.setPixelRatio( window.devicePixelRatio );
    renderer2.setSize( window.innerWidth, window.innerHeight );
    document.getElementById('container').appendChild( renderer2.domElement );

   
    //

    window.addEventListener( 'resize', onWindowResize, false );
    document.addEventListener( 'mousemove', onDocumentMouseMove, false );

    // console.log(scene.children[0].position.x + ";" + scene.children[0].position.y + ";" + scene.children[0].position.z);

    


}





// 以上
function transform( targets, duration ) {

    TWEEN.removeAll();

    for ( var i = 0; i < objects.length; i ++ ) {

        var object = objects[ i ];
        var target = targets[ i ];

        new TWEEN.Tween( object.position )
            .to( { x: target.position.x, y: target.position.y, z: target.position.z }, Math.random() * duration + duration )
            .easing( TWEEN.Easing.Exponential.InOut )
            .start();

    }

    new TWEEN.Tween( this )
        .to( {}, duration * 2 )
        .onUpdate( render )
        .start();

}



function moveToProject(project, duration) {
    TWEEN.removeAll();

    new TWEEN.Tween(camera.position)
        .to( {x: project.position.x, y: project.position.y, z: project.position.z}, Math.random()*duration + duration)
        .easing(TWEEN.Easing.Exponential.Out)
        .start();

    new TWEEN.Tween( this )
        .to( {}, duration * 2 )
        .onUpdate( render )
        .start();
}

function cubeFade(end, duration) {
    // TWEEN.removeAll();

    new TWEEN.Tween(loadCube.position)
        .to( {x: end.position.x, y: end.position.y, z: end.position.z}, Math.random()*duration + duration)
        .easing(TWEEN.Easing.Exponential.InOut)
        .start();

    new TWEEN.Tween( this )
        .to( {}, duration * 2 )
        .onUpdate( render )
        .start();
}


function onWindowResize() {

    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();

    renderer.setSize( window.innerWidth, window.innerHeight );

    
}

function onDocumentMouseMove( event ) {

    event.preventDefault();

    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;

    raycaster.setFromCamera( mouse, camera );
    var intersects = raycaster.intersectObjects(scene.children);

    // console.log(event.clientX + "; " + event.clientY);
}

function animate() {

    requestAnimationFrame( animate );
    render();
    TWEEN.update();
    loadCube.rotation.x += 0.005;
    loadCube.rotation.y += 0.01;
    // console.log(camera.position.z);
}



function render() {
    renderer2.render( scene2, camera );
    renderer.render( scene, camera );
    // var timer = Date.now() * 0.0001;
       
    for (var i = 0; i < planets.length; i++) {
      orbit(planets[i], sun);
    }

    planets[1].rotation.y += 0.005;
    planets[1].rotation.x += 0.01;

    // console.log(camera.position.x + ";" + camera.position.y + ";" + camera.position.z);
    // console.log("sun: y=" + sun.position.y + "; z=" + sun.position.z);
}

$(document).ready(function() {
    

    init();
    animate();


});


function closeCube() {

    loadCube.position.z -=100;
    if (loadCube.position.z <0 ) {
        scene2.remove(loadCube);
    }
}
// -------------------------------------- solar system functions ----------------------------------------
function getDistance(v1, v2) {
  var x = v1.x - v2.x;
  var y = v1.y - v2.y;
  var z = v1.z - v2.z;
  return Math.sqrt(x * x + y * y + z * z);
}

function createTrail(x, y, z) {
  var trailGeometry = new THREE.Geometry();
  for (i = 0; i < MAX_TRAIL_VERTICES; i++) {
    trailGeometry.vertices.push(new THREE.Vector3(x, y, z));
  }
  var trailMaterial = new THREE.LineDashedMaterial({color: 0x4D4D4D, linewidth: 0.7});
  return new THREE.Line(trailGeometry, trailMaterial);
}

function createSphere(r, x, y, z, astro) {
  if (astro === undefined) {
    astro = {};
  }
  if (astro.vel === undefined) {
    astro.vel = new THREE.Vector3();
  }
  if (astro.trail === undefined) {
    astro.trail = createTrail(x, y, z);
  }

  var geometry = new THREE.SphereGeometry(r, 32, 16);
  var material = new THREE.MeshBasicMaterial({wireframe:true});
  var sphere = new THREE.Mesh(geometry, material);
  sphere.position.set(x, y, z);
  sphere.astro = astro;


    var points = [];
    for ( var i = 0; i < 50; i ++ ) {
        points.push( randomPointInSphere( 1 ) );
    }


  var ghostGeometry = new THREE.ConvexGeometry( points );
  var ghostMaterial = new THREE.MeshBasicMaterial({ color: 0x000000, transparent: true, wireframe: true});
  var ghostSphere = new THREE.Mesh(ghostGeometry, ghostMaterial);
  ghostSphere.position.set(x, y, z);
  sphere.astro.ghost = ghostSphere;
  return sphere;

}

function addSphere(r, x, y, z, astro) {
  var sphere = createSphere(r, x, y, z, astro);
  scene2.add(sphere);
  scene2.add(sphere.astro.ghost);
  scene2.add(sphere.astro.trail);
  return sphere;
}

function getAcceleration(distance, starMass) {
  return G * starMass / (Math.pow(distance, 2));
}

function updateVelocity(planet, star) {
  var vel = new THREE.Vector3();
  var speed;
  for(var i=0; i < STEPS_PER_FRAME; i++) {
    speed = getAcceleration(getDistance(star.position, planet.position) * METERS_PER_UNIT, star.astro.mass) * SEC_PER_STEP;
    vel.subVectors(star.position, planet.position).setLength(speed / METERS_PER_UNIT);
    planet.astro.vel.add(vel);

    planet.position.x += planet.astro.vel.x * SEC_PER_STEP;
    planet.position.y += planet.astro.vel.y * SEC_PER_STEP;
    planet.position.z += planet.astro.vel.z * SEC_PER_STEP;

    if (i % 10000 === 0) {
      leaveTrail(planet);
    }
  }
  
}

function leaveTrail(sphere) {
  sphere.astro.trail.geometry.vertices.unshift(new THREE.Vector3().copy(sphere.position));
  sphere.astro.trail.geometry.vertices.length = MAX_TRAIL_VERTICES;
  sphere.astro.trail.geometry.verticesNeedUpdate = true;
}

function orbit(planet, star) {
  updateVelocity(planet, star);
  updateGhost(star);
  updateGhost(planet);
}

function updateGhost(planet) {
  planet.astro.ghost.position.copy(planet.position);

  var distance = getDistance(camera.position, planet.position);
  if (distance < MIN_GHOST_DISTANCE) {
    planet.astro.ghost.material.opacity = 0;
  } else {
    planet.astro.ghost.scale.x = planet.astro.ghost.scale.y = planet.astro.ghost.scale.z = distance/GHOST_DISTANCE_SCALE;
    planet.astro.ghost.material.opacity = MAX_GHOST_OPACITY;
  }
}

function randomPointInSphere( radius ) {

    return new THREE.Vector3(
        ( Math.random() - 0.5 ) * 2 * radius,
        ( Math.random() - 0.5 ) * 2 * radius,
        ( Math.random() - 0.5 ) * 2 * radius
    );
}

